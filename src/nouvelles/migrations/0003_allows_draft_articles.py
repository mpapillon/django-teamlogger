# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-05 20:05
from __future__ import unicode_literals

import itertools

from django.db import migrations, models
from django.utils.text import slugify


def forwards_func(apps, schema_editor):
    """Sets the default publication_date like creation_date on all articles."""
    Article = apps.get_model("nouvelles", "Article")
    db_alias = schema_editor.connection.alias

    for article in Article.objects.using(db_alias).all():
        article.publication_date = article.creation_date
        article.save()


def reverse_func(apps, schema_editor):
    """Resurrect the slug field."""
    Article = apps.get_model("nouvelles", "Article")
    db_alias = schema_editor.connection.alias

    for article in Article.objects.using(db_alias).all():
        # creates slug if not yet saved
        max_length = Article._meta.get_field('slug').max_length
        article.slug = orig = slugify(article.title)[:max_length]

        for x in itertools.count(1):
            if not Article.objects.filter(slug=article.slug).exists():
                break
            # Truncate the original slug dynamically. Minus 1 for the hyphen.
            article.slug = "%s-%d" % (orig[:max_length - len(str(x)) - 1], x)

        article.save()


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ('nouvelles', '0002_change_article_title_length'),
    ]

    operations = [
        migrations.RenameField(
            model_name='article',
            old_name='description',
            new_name='content',
        ),
        migrations.AddField(
            model_name='article',
            name='publication_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='slug',
            field=models.SlugField(editable=False, blank=True, default='')
        ),
        migrations.RunPython(forwards_func, reverse_func, atomic=True),
        migrations.RemoveField(
            model_name='article',
            name='slug',
        ),
    ]
